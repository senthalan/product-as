<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<assembly>
    <id>dist</id>
    <baseDirectory>/</baseDirectory>
    <formats>
        <format>zip</format>
    </formats>
    <fileSets>
        <fileSet>
            <directory>appserver-home/conf/</directory>
            <outputDirectory>${distribution.file.name}/conf/</outputDirectory>
        </fileSet>
        <fileSet>
            <directory>appserver-home/</directory>
            <outputDirectory>${distribution.file.name}/</outputDirectory>
        </fileSet>
        <fileSet>
            <directory>target/tomcat-dist/apache-tomcat-${tomcat.version}/bin</directory>
            <outputDirectory>${distribution.file.name}/bin</outputDirectory>
            <includes>
                <include>*.sh</include>
            </includes>
            <fileMode>0755</fileMode>
        </fileSet>
        <fileSet>
            <directory>target/tomcat-dist/apache-tomcat-${tomcat.version}</directory>
            <outputDirectory>${distribution.file.name}/</outputDirectory>
        </fileSet>
        <fileSet>
            <directory>../samples/appserver-sso-samples/sso-quickstart/src/main/resources/sso-quickstart
            </directory>
            <outputDirectory>${distribution.file.name}/samples/sso-quickstart</outputDirectory>
        </fileSet>
        <!--  copying SSOSamples -->
        <fileSet>
            <directory>../samples/appserver-sso-samples/sso-sample-apps</directory>
            <outputDirectory>${distribution.file.name}/samples/sso-sample-apps</outputDirectory>
            <excludes>
                <exclude>**/**.sh</exclude>
                <exclude>**/target/**</exclude>
                <exclude>**/pom.xml.releaseBackup</exclude>
                <exclude>*.iml</exclude>
            </excludes>
        </fileSet>
        <fileSet>
            <directory>../samples/jaxrs_basic</directory>
            <outputDirectory>${distribution.file.name}/samples/jaxrs_basic</outputDirectory>
            <excludes>
                <exclude>**/**.sh</exclude>
                <exclude>**/target/**</exclude>
                <exclude>**/pom.xml.releaseBackup</exclude>
                <exclude>*.iml</exclude>
            </excludes>
        </fileSet>
        <fileSet>
            <directory>../samples/jaggerySamples</directory>
            <outputDirectory>${distribution.file.name}/samples/jaggery-sample-apps</outputDirectory>
        </fileSet>
    </fileSets>
    <files>
        <file>
            <source>../samples/appserver-sso-samples/sso-quickstart/README.md</source>
            <outputDirectory>${distribution.file.name}/samples/sso-quickstart</outputDirectory>
        </file>
    </files>

    <dependencySets>
        <!-- Include application server modules here -->
        <dependencySet>
            <outputDirectory>/${distribution.file.name}/lib</outputDirectory>
            <includes>
                <include>org.wso2.appserver:appserver-utils:jar</include>
                <include>org.wso2.appserver:appserver-http-statistics-monitoring:jar</include>
                <include>org.wso2.appserver:appserver-webapp-loader:jar</include>
                <include>org.wso2.appserver:appserver-webapp-security:jar</include>
                <include>org.wso2.appserver:api-everywhere-as:jar</include>
            </includes>
        </dependencySet>

        <!-- Include shade libraries here -->
        <dependencySet>
            <outputDirectory>/${distribution.file.name}/lib</outputDirectory>
            <includes>
                <include>org.wso2.appserver.shade.org.apache.thrift:libthrift-shaded:jar</include>
                <include>org.wso2.appserver.shade.org.opensaml:opensaml-core-shaded:jar</include>
                <include>org.wso2.appserver.shade.org.opensaml:opensaml-messaging-api-shaded:jar</include>
                <include>org.wso2.appserver.shade.org.opensaml:opensaml-profile-api-shaded:jar</include>
                <include>org.wso2.appserver.shade.org.opensaml:opensaml-saml-api-shaded:jar</include>
                <include>org.wso2.appserver.shade.org.opensaml:opensaml-saml-impl-shaded:jar</include>
                <include>org.wso2.appserver.shade.org.opensaml:opensaml-security-api-shaded:jar</include>
                <include>org.wso2.appserver.shade.org.opensaml:opensaml-security-impl-shaded:jar</include>
                <include>org.wso2.appserver.shade.org.opensaml:opensaml-soap-api-shaded:jar</include>
                <include>org.wso2.appserver.shade.org.opensaml:opensaml-soap-impl-shaded:jar</include>
                <include>org.wso2.appserver.shade.org.opensaml:opensaml-storage-api-shaded:jar</include>
                <include>org.wso2.appserver.shade.org.opensaml:opensaml-xmlsec-api-shaded:jar</include>
                <include>org.wso2.appserver.shade.org.opensaml:opensaml-xmlsec-impl-shaded:jar</include>
                <include>org.wso2.appserver.shade.org.apache.santuario:santuario-xmlsec-shaded:jar</include>
                <include>org.wso2.appserver.shade.net.shibboleth.utilities:shibboleth-java-support-shaded:jar</include>
                <include>org.wso2.appserver.shade.slf4j:slf4j-shaded:jar</include>
                <include>org.wso2.appserver.shade.commons-logging:commons-logging-shaded:jar</include>
                <include>
                    org.wso2.appserver.shade.org.wso2.carbon.analytics-common:org.wso2.carbon.databridge.agent-shaded:jar
                </include>
                <include>
                    org.wso2.appserver.shade.org.wso2.carbon.analytics-common:org.wso2.carbon.databridge.commons-shaded:jar
                </include>
                <include>org.wso2.appserver.shade.log4j:log4j-shaded:jar</include>
            </includes>
            <useProjectArtifact>false</useProjectArtifact>
            <useTransitiveFiltering>true</useTransitiveFiltering>
        </dependencySet>

        <!-- Include dependencies for application server modules here -->
        <dependencySet>
            <outputDirectory>/${distribution.file.name}/lib</outputDirectory>
            <includes>
                <include>org.wso2.carbon.analytics-common:org.wso2.carbon.databridge.commons.thrift:jar</include>
                <include>org.wso2.carbon.analytics-common:org.wso2.carbon.databridge.commons.binary:jar</include>
                <include>org.apache.commons:commons-lang3:jar</include>
                <include>commons-pool:commons-pool:jar</include>
                <include>commons-io:commons-io:jar</include>
                <include>com.lmax:disruptor:jar</include>

                <include>com.google.code.findbugs:jsr305:jar</include>
                <include>com.google.guava:guava:jar</include>
                <include>commons-codec:commons-codec:jar</include>
                <include>javax.xml.stream:stax-api:jar</include>
                <include>joda-time:joda-time:jar</include>
                <include>org.apache.httpcomponents:httpclient:jar</include>
                <include>org.apache.httpcomponents:httpcore:jar</include>
                <include>org.bouncycastle:bcprov-jdk15on:jar</include>
                <include>org.codehaus.woodstox:stax2-api:jar</include>
                <include>org.codehaus.woodstox:woodstox-core-asl:jar</include>
                <include>org.cryptacular:cryptacular:jar</include>

                <!--for jaggery app deployment-->
                <include>org.jaggeryjs:org.jaggeryjs.jaggery.tomcat.listener:jar</include>
            </includes>
        </dependencySet>

        <!-- Include dependencies for api everywhere modules here -->
        <dependencySet>
            <outputDirectory>/${distribution.file.name}/lib</outputDirectory>
            <includes>
                <include>org.reflections:reflections:jar</include>
                <include>javax.ws.rs:javax.ws.rs-api:jar</include>
                <include>javassist:javassist:jar</include>
                <include>org.json.wso2:json:jar</include>
                <include>com.google.code.gson:gson:jar</include>
                <include>io.swagger:swagger-models:jar</include>
            </includes>
        </dependencySet>

        <!-- Include application server runtime libs here -->
        <!-- CXF runtime -->
        <dependencySet>
            <outputDirectory>/${distribution.file.name}/lib/runtimes/cxf</outputDirectory>
            <includes>
                <include>org.apache.cxf:cxf-rt-frontend-jaxws:jar</include>
                <include>org.apache.cxf:cxf-rt-frontend-jaxrs:jar</include>
                <include>org.apache.cxf:cxf-rt-transports-http:jar</include>
                <include>org.wso2.appserver.shade.org.springframework:spring-beans-shaded:jar</include>
                <include>org.wso2.appserver.shade.org.springframework:spring-context-shaded:jar</include>
                <include>org.wso2.appserver.shade.org.springframework:spring-core-shaded:jar</include>
                <include>org.wso2.appserver.shade.org.springframework:spring-web-shaded:jar</include>
                <include>org.springframework:spring-aop:jar</include>
                <include>org.springframework:spring-webmvc:jar</include>
            </includes>
            <excludes>
                <exclude>org.springframework:spring-beans:jar</exclude>
                <exclude>org.springframework:spring-context:jar</exclude>
                <exclude>org.springframework:spring-core:jar</exclude>
                <exclude>org.springframework:spring-web:jar</exclude>
            </excludes>
            <useProjectArtifact>false</useProjectArtifact>
            <useTransitiveFiltering>true</useTransitiveFiltering>
        </dependencySet>

        <!-- jaggery runtime -->
        <dependencySet>
            <outputDirectory>/${distribution.file.name}/lib/runtimes/jaggery</outputDirectory>
            <includes>
                <include>org.wso2.appserver.shade.org.jaggeryjs:org.jaggeryjs.hostobjects.file-shaded:jar</include>
                <include>org.wso2.appserver.shade.org.jaggeryjs:org.jaggeryjs.hostobjects.jaggeryparser-shaded:jar
                </include>
                <include>org.wso2.appserver.shade.org.jaggeryjs:org.jaggeryjs.hostobjects.log-shaded:jar</include>
                <include>org.jaggeryjs:org.jaggeryjs.hostobjects.oauth:jar</include>
                <include>org.wso2.appserver.shade.org.jaggeryjs:org.jaggeryjs.hostobjects.stream-shaded:jar</include>
                <include>org.wso2.appserver.shade.org.jaggeryjs:org.jaggeryjs.hostobjects.uri-shaded:jar</include>
                <include>org.wso2.appserver.shade.org.jaggeryjs:org.jaggeryjs.hostobjects.web-shaded:jar</include>
                <include>org.wso2.appserver.shade.org.jaggeryjs:org.jaggeryjs.hostobjects.xhr-shaded:jar</include>
                <include>org.wso2.appserver.shade.org.jaggeryjs:org.jaggeryjs.hostobjects.xslt-shaded:jar</include>
                <include>org.wso2.appserver.shade.org.jaggeryjs:org.jaggeryjs.jaggery.core-shaded:jar</include>
                <include>org.wso2.appserver.shade.org.jaggeryjs:org.jaggeryjs.scriptengine-shaded:jar</include>
                <include>commons-fileupload.wso2:commons-fileupload:jar</include>
                <include>org.wso2.appserver.shade.commons-httpclient:commons-httpclient-shaded:jar</include>
                <include>rhino.wso2:js:jar</include>
                <include>com.googlecode.json-simple:json-simple:jar</include>
                <include>com.googlecode.json-simple:org.jaggeryjs.scriptengine:jar</include>
                <include>org.jaggeryjs:json-simple:jar</include>
                <include>org.eclipse.wst.jsdt:org.eclipse.wst.jsdt.debug.transport:jar</include>
                <include>org.wso2.uri.template:wso2-uri-templates:jar</include>
            </includes>
            <useProjectArtifact>false</useProjectArtifact>
            <useTransitiveFiltering>false</useTransitiveFiltering>
            <useTransitiveDependencies>false</useTransitiveDependencies>
        </dependencySet>

        <!--include quickstart sample-->
        <dependencySet>
            <outputDirectory>/${distribution.file.name}/samples/sso-quickstart/</outputDirectory>
            <includes>
                <include>org.wso2.appserver:sso-quickstart:jar</include>
            </includes>
            <useProjectArtifact>false</useProjectArtifact>
            <useTransitiveFiltering>true</useTransitiveFiltering>
        </dependencySet>
    </dependencySets>
</assembly>
